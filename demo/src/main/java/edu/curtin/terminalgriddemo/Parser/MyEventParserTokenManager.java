/* Generated By:JavaCC: Do not edit this line. MyEventParserTokenManager.java */
package edu.curtin.terminalgriddemo.Parser;
import java.util.*;

/** Token Manager. */
public class MyEventParserTokenManager implements MyEventParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private int jjMoveStringLiteralDfa0_0()
{
   return jjMoveNfa_0(9, 0);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 189;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 9:
                  if ((0xfffffffffffffbffL & l) != 0L)
                  {
                     if (kind > 6)
                        kind = 6;
                  }
                  else if (curChar == 10)
                     jjAddStates(0, 1);
                  if ((0x3ff400000000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAdd(10);
                  }
                  else if ((0x500000600L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     jjCheckNAddStates(2, 5);
                  }
                  else if (curChar == 13)
                     jjCheckNAdd(1);
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAddStates(6, 10);
                  }
                  else if ((0x100002600L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                     jjCheckNAdd(0);
                  }
                  else if (curChar == 34)
                     jjCheckNAddStates(11, 18);
                  if (curChar == 9)
                     jjCheckNAddTwoStates(1, 7);
                  break;
               case 0:
                  if ((0x100002600L & l) == 0L)
                     break;
                  if (kind > 1)
                     kind = 1;
                  jjCheckNAdd(0);
                  break;
               case 1:
                  if (curChar != 10)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAddStates(2, 5);
                  break;
               case 2:
               case 7:
                  if (curChar == 13)
                     jjCheckNAdd(1);
                  break;
               case 3:
                  if ((0x500000600L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAddStates(2, 5);
                  break;
               case 4:
                  if (curChar == 10)
                     jjAddStates(0, 1);
                  break;
               case 5:
                  if (curChar != 9)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAddStates(2, 5);
                  break;
               case 6:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(1, 7);
                  break;
               case 8:
                  if (curChar != 13)
                     break;
                  if (kind > 2)
                     kind = 2;
                  jjCheckNAddStates(2, 5);
                  break;
               case 10:
                  if ((0x3ff400000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(10);
                  break;
               case 12:
                  jjAddStates(19, 20);
                  break;
               case 15:
                  if (curChar == 10)
                     jjCheckNAddStates(21, 25);
                  break;
               case 16:
               case 33:
                  if (curChar == 13)
                     jjCheckNAdd(15);
                  break;
               case 17:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(21, 25);
                  break;
               case 18:
                  if ((0x3ff400000000000L & l) != 0L)
                     jjCheckNAddStates(26, 31);
                  break;
               case 19:
                  if (curChar == 10)
                     jjCheckNAddStates(32, 36);
                  break;
               case 20:
               case 28:
                  if (curChar == 13)
                     jjCheckNAdd(19);
                  break;
               case 21:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(32, 36);
                  break;
               case 23:
                  jjAddStates(37, 38);
                  break;
               case 25:
                  if (curChar == 10)
                     jjAddStates(39, 40);
                  break;
               case 26:
                  if (curChar == 9)
                     jjCheckNAddStates(32, 36);
                  break;
               case 27:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(19, 28);
                  break;
               case 29:
                  if (curChar == 13)
                     jjCheckNAddStates(32, 36);
                  break;
               case 30:
                  if (curChar == 10)
                     jjAddStates(41, 42);
                  break;
               case 31:
                  if (curChar == 9)
                     jjCheckNAddStates(21, 25);
                  break;
               case 32:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(15, 33);
                  break;
               case 34:
                  if (curChar == 13)
                     jjCheckNAddStates(21, 25);
                  break;
               case 41:
                  if (curChar == 10)
                     jjCheckNAddStates(43, 47);
                  break;
               case 42:
               case 52:
                  if (curChar == 13)
                     jjCheckNAdd(41);
                  break;
               case 43:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(43, 47);
                  break;
               case 44:
               case 46:
                  if (curChar == 34)
                     jjCheckNAddStates(48, 50);
                  break;
               case 45:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(48, 50);
                  break;
               case 47:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 34 && kind > 15)
                     kind = 15;
                  break;
               case 49:
                  if (curChar == 10)
                     jjAddStates(51, 52);
                  break;
               case 50:
                  if (curChar == 9)
                     jjCheckNAddStates(43, 47);
                  break;
               case 51:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(41, 52);
                  break;
               case 53:
                  if (curChar == 13)
                     jjCheckNAddStates(43, 47);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAddStates(6, 10);
                  break;
               case 60:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(60, 61);
                  break;
               case 61:
                  if (curChar == 45)
                     jjCheckNAdd(62);
                  break;
               case 62:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(62, 63);
                  break;
               case 63:
                  if (curChar == 45)
                     jjCheckNAdd(64);
                  break;
               case 64:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 3)
                     kind = 3;
                  jjCheckNAdd(64);
                  break;
               case 65:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(65, 66);
                  break;
               case 66:
                  if (curChar == 58)
                     jjCheckNAdd(67);
                  break;
               case 67:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(67, 68);
                  break;
               case 68:
                  if (curChar == 58)
                     jjCheckNAdd(69);
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 4)
                     kind = 4;
                  jjCheckNAdd(69);
                  break;
               case 70:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(70);
                  break;
               case 73:
                  if (curChar == 10)
                     jjCheckNAddStates(53, 57);
                  break;
               case 74:
               case 117:
                  if (curChar == 13)
                     jjCheckNAdd(73);
                  break;
               case 75:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(53, 57);
                  break;
               case 76:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(76, 77);
                  break;
               case 77:
                  if (curChar == 45)
                     jjCheckNAdd(78);
                  break;
               case 78:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(78, 79);
                  break;
               case 79:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 80;
                  break;
               case 80:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(58, 62);
                  break;
               case 81:
                  if (curChar == 10)
                     jjCheckNAddStates(63, 67);
                  break;
               case 82:
               case 111:
                  if (curChar == 13)
                     jjCheckNAdd(81);
                  break;
               case 83:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(63, 67);
                  break;
               case 84:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(84, 85);
                  break;
               case 85:
                  if (curChar == 58)
                     jjCheckNAdd(86);
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(86, 87);
                  break;
               case 87:
                  if (curChar == 58)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 88:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(68, 72);
                  break;
               case 89:
                  if (curChar == 10)
                     jjCheckNAddStates(73, 77);
                  break;
               case 90:
               case 105:
                  if (curChar == 13)
                     jjCheckNAdd(89);
                  break;
               case 91:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(73, 77);
                  break;
               case 92:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAddStates(78, 83);
                  break;
               case 93:
                  if (curChar != 10)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAddStates(84, 88);
                  break;
               case 94:
               case 100:
                  if (curChar == 13)
                     jjCheckNAdd(93);
                  break;
               case 95:
                  if ((0x500000600L & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAddStates(84, 88);
                  break;
               case 96:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAdd(96);
                  break;
               case 97:
                  if (curChar == 10)
                     jjAddStates(89, 90);
                  break;
               case 98:
                  if (curChar != 9)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAddStates(84, 88);
                  break;
               case 99:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(93, 100);
                  break;
               case 101:
                  if (curChar != 13)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAddStates(84, 88);
                  break;
               case 102:
                  if (curChar == 10)
                     jjAddStates(91, 92);
                  break;
               case 103:
                  if (curChar == 9)
                     jjCheckNAddStates(73, 77);
                  break;
               case 104:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(89, 105);
                  break;
               case 106:
                  if (curChar == 13)
                     jjCheckNAddStates(73, 77);
                  break;
               case 107:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjCheckNAddStates(93, 103);
                  break;
               case 108:
                  if (curChar == 10)
                     jjAddStates(104, 105);
                  break;
               case 109:
                  if (curChar == 9)
                     jjCheckNAddStates(63, 67);
                  break;
               case 110:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(81, 111);
                  break;
               case 112:
                  if (curChar == 13)
                     jjCheckNAddStates(63, 67);
                  break;
               case 113:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(106, 112);
                  break;
               case 114:
                  if (curChar == 10)
                     jjAddStates(113, 114);
                  break;
               case 115:
                  if (curChar == 9)
                     jjCheckNAddStates(53, 57);
                  break;
               case 116:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(73, 117);
                  break;
               case 118:
                  if (curChar == 13)
                     jjCheckNAddStates(53, 57);
                  break;
               case 123:
                  if (curChar == 10)
                     jjCheckNAddStates(115, 119);
                  break;
               case 124:
               case 158:
                  if (curChar == 13)
                     jjCheckNAdd(123);
                  break;
               case 125:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(115, 119);
                  break;
               case 126:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(126, 127);
                  break;
               case 127:
                  if (curChar == 45)
                     jjCheckNAdd(128);
                  break;
               case 128:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddTwoStates(128, 129);
                  break;
               case 129:
                  if (curChar == 45)
                     jjCheckNAdd(130);
                  break;
               case 130:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjCheckNAddStates(120, 125);
                  break;
               case 131:
                  if (curChar == 10)
                     jjCheckNAddStates(126, 130);
                  break;
               case 132:
               case 153:
                  if (curChar == 13)
                     jjCheckNAdd(131);
                  break;
               case 133:
                  if ((0x500000600L & l) != 0L)
                     jjCheckNAddStates(126, 130);
                  break;
               case 135:
                  if (curChar != 10)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(131, 135);
                  break;
               case 136:
               case 142:
                  if (curChar == 13)
                     jjCheckNAdd(135);
                  break;
               case 137:
                  if ((0x500000600L & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(131, 135);
                  break;
               case 138:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(138);
                  break;
               case 139:
                  if (curChar == 10)
                     jjAddStates(136, 137);
                  break;
               case 140:
                  if (curChar != 9)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(131, 135);
                  break;
               case 141:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(135, 142);
                  break;
               case 143:
                  if (curChar != 13)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(131, 135);
                  break;
               case 146:
                  if (curChar == 45)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 150:
                  if (curChar == 10)
                     jjAddStates(138, 139);
                  break;
               case 151:
                  if (curChar == 9)
                     jjCheckNAddStates(126, 130);
                  break;
               case 152:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(131, 153);
                  break;
               case 154:
                  if (curChar == 13)
                     jjCheckNAddStates(126, 130);
                  break;
               case 155:
                  if (curChar == 10)
                     jjAddStates(140, 141);
                  break;
               case 156:
                  if (curChar == 9)
                     jjCheckNAddStates(115, 119);
                  break;
               case 157:
                  if (curChar == 9)
                     jjCheckNAddTwoStates(123, 158);
                  break;
               case 159:
                  if (curChar == 13)
                     jjCheckNAddStates(115, 119);
                  break;
               case 163:
                  if (curChar == 34)
                     jjCheckNAddStates(11, 18);
                  break;
               case 164:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(164, 165);
                  break;
               case 165:
                  if (curChar == 34 && kind > 10)
                     kind = 10;
                  break;
               case 166:
                  jjCheckNAddStates(142, 144);
                  break;
               case 167:
                  if (curChar == 34 && kind > 12)
                     kind = 12;
                  break;
               case 169:
                  if (curChar == 34)
                     jjCheckNAddStates(142, 144);
                  break;
               case 171:
                  if (curChar == 42)
                     jjCheckNAddStates(142, 144);
                  break;
               case 185:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(145, 147);
                  break;
               case 186:
                  if (curChar == 34)
                     jjCheckNAddStates(145, 147);
                  break;
               case 187:
                  if (curChar == 34)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 34 && kind > 13)
                     kind = 13;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 9:
                  if (kind > 6)
                     kind = 6;
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAdd(10);
                  }
                  else if (curChar == 123)
                     jjCheckNAddTwoStates(12, 13);
                  if (curChar == 101)
                     jjAddStates(148, 149);
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 10:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(10);
                  break;
               case 11:
                  if (curChar == 123)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 12:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(12, 13);
                  break;
               case 13:
                  if (curChar == 125 && kind > 11)
                     kind = 11;
                  break;
               case 14:
                  if (curChar == 110)
                     jjCheckNAddStates(21, 25);
                  break;
               case 18:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                     jjCheckNAddStates(26, 31);
                  break;
               case 22:
                  if (curChar == 123)
                     jjCheckNAddTwoStates(23, 24);
                  break;
               case 23:
                  if ((0xdfffffffffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(23, 24);
                  break;
               case 24:
                  if (curChar == 125 && kind > 14)
                     kind = 14;
                  break;
               case 35:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 36:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 116)
                     jjAddStates(43, 47);
                  break;
               case 45:
                  jjAddStates(48, 50);
                  break;
               case 54:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 55:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 54;
                  break;
               case 56:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 71:
                  if (curChar == 101)
                     jjAddStates(148, 149);
                  break;
               case 72:
                  if (curChar == 116)
                     jjAddStates(53, 57);
                  break;
               case 96:
                  if (kind > 7)
                     kind = 7;
                  jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 119:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 120:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 116)
                     jjAddStates(115, 119);
                  break;
               case 134:
                  if (curChar != 121)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAddStates(131, 135);
                  break;
               case 138:
                  if (kind > 8)
                     kind = 8;
                  jjCheckNAdd(138);
                  break;
               case 144:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 145:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 147:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 160:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 161:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 164:
                  jjAddStates(150, 151);
                  break;
               case 166:
                  jjCheckNAddStates(142, 144);
                  break;
               case 168:
                  if (curChar == 92)
                     jjAddStates(152, 154);
                  break;
               case 170:
                  if (curChar == 110)
                     jjCheckNAddStates(142, 144);
                  break;
               case 172:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 93)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar == 91)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  jjAddStates(145, 147);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 9:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 6)
                     kind = 6;
                  break;
               case 12:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(19, 20);
                  break;
               case 23:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(37, 38);
                  break;
               case 45:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(48, 50);
                  break;
               case 96:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 7)
                     kind = 7;
                  jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 138:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 8)
                     kind = 8;
                  jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 164:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(150, 151);
                  break;
               case 166:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(142, 144);
                  break;
               case 185:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(145, 147);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 189 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   5, 8, 2, 3, 4, 6, 60, 61, 65, 66, 70, 164, 165, 166, 167, 185, 
   187, 188, 168, 12, 13, 16, 17, 18, 30, 32, 18, 20, 21, 22, 25, 27, 
   20, 21, 22, 25, 27, 23, 24, 26, 29, 31, 34, 42, 43, 44, 49, 51, 
   45, 47, 48, 50, 53, 74, 75, 76, 114, 116, 82, 83, 108, 110, 113, 82, 
   83, 84, 108, 110, 90, 91, 102, 104, 107, 90, 91, 92, 102, 104, 92, 94, 
   95, 96, 97, 99, 94, 95, 96, 97, 99, 98, 101, 103, 106, 90, 91, 92, 
   94, 95, 96, 97, 99, 102, 104, 107, 109, 112, 82, 83, 84, 85, 108, 110, 
   113, 115, 118, 124, 125, 126, 155, 157, 130, 132, 133, 149, 150, 152, 132, 133, 
   149, 150, 152, 136, 137, 138, 139, 141, 140, 143, 151, 154, 156, 159, 166, 167, 
   168, 185, 187, 188, 121, 162, 164, 165, 169, 170, 184, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, null, null, null, null, null, 
null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xfffdL, 
};
static final long[] jjtoSkip = {
   0x2L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[189];
private final int[] jjstateSet = new int[378];
protected char curChar;
/** Constructor. */
public MyEventParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public MyEventParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 189; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
